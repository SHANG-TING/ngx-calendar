/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * 判斷是否為閏年
 * @param {?} year
 * @return {?}
 */
export function is_leap(year) {
    return year % 100 === 0 ? (year % 400 === 0 ? 1 : 0) : year % 4 === 0 ? 1 : 0;
}
/**
 * @param {?} ynow
 * @param {?} mnow
 * @param {?} events
 * @param {?=} weeklyEvents
 * @return {?}
 */
export function getCalendar(ynow, mnow, events, weeklyEvents = []) {
    // 今天
    /** @type {?} */
    const today = new Date();
    // 當月第一天
    /** @type {?} */
    const nlstr = new Date(ynow, mnow, 1);
    // 第一天星期幾
    /** @type {?} */
    const firstday = nlstr.getDay();
    // 每個月的天數
    /** @type {?} */
    const m_days = new Array(31, 28 + is_leap(ynow), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
    // 當前月天數+第一天是星期幾的數值 獲得 表格行數
    /** @type {?} */
    const tr_str = Math.ceil((m_days[mnow] + firstday) / 7);
    // 每周事件
    /** @type {?} */
    const mutileEvents = events.concat(...weeklyEvents.map(getMutipleEvents(ynow, mnow)));
    // 結果
    /** @type {?} */
    const calendar = [];
    /** @type {?} */
    let i;
    /** @type {?} */
    let k;
    /** @type {?} */
    let idx;
    /** @type {?} */
    let date_str;
    // 表格的行
    for (i = 0; i < tr_str; i++) {
        /** @type {?} */
        const week = {
            days: [],
            style: {},
        };
        // 表格每行的單元格
        for (k = 0; k < 7; k++) {
            // 單元格自然序列號
            idx = i * 7 + k;
            // 計算日期
            date_str = idx - firstday + 1;
            /** @type {?} */
            let calendarDay;
            if (date_str <= 0) {
                // 過濾無效日期（小於等於零的）
                // 取當月第一天
                /** @type {?} */
                const mPrev = new Date(ynow, mnow, 1);
                // 將日期-1為上個月的最後一天，隨著上個月天數變化
                mPrev.setDate(mPrev.getDate() + date_str - 1);
                // 設定日期
                // date_str = mPrev.getDate();
                calendarDay = { date: mPrev, other: true };
            }
            else if (date_str > m_days[mnow]) {
                // 過濾無效日期（大於月總天數的）
                // 取當月第一天
                /** @type {?} */
                const mNext = new Date(ynow, mnow, 1);
                // 取下個月第一天
                mNext.setMonth(mNext.getMonth() + 1);
                // 隨著下個月天數變化
                mNext.setDate(mNext.getDate() + (date_str - m_days[mnow]) - 1);
                // 設定日期
                // date_str = mNext.getDate();
                calendarDay = { date: mNext, other: true };
            }
            else {
                calendarDay = { date: new Date(ynow, mnow, date_str) };
            }
            calendarDay.events = mutileEvents.filter(event => contain(event, calendarDay.date));
            calendarDay.name = calendarDay.date.getDay();
            calendarDay.number = calendarDay.date.getDate();
            calendarDay.isToday =
                calendarDay.date.getFullYear() === today.getFullYear() &&
                    calendarDay.date.getMonth() === today.getMonth() &&
                    calendarDay.date.getDate() === today.getDate();
            week.days.push(calendarDay);
        }
        calendar.push(week);
    }
    return calendar;
}
/**
 * @param {?} event
 * @param {?} date
 * @return {?}
 */
export function contain(event, date) {
    if (event.start && event.end) {
        /** @type {?} */
        const start = new Date(event.start.getFullYear(), event.start.getMonth(), event.start.getDate());
        /** @type {?} */
        const end = new Date(event.end.getFullYear(), event.end.getMonth(), event.end.getDate());
        end.setDate(end.getDate() + 1);
        return start.getTime() <= date.getTime() && end.getTime() > date.getTime();
    }
    if (event.start) {
        return (event.start.getFullYear() === date.getFullYear() &&
            event.start.getMonth() === date.getMonth() &&
            event.start.getDate() === date.getDate());
    }
    return false;
}
/**
 * @param {?} ynow
 * @param {?} mnow
 * @return {?}
 */
export function getMutipleEvents(ynow, mnow) {
    return (event) => {
        /** @type {?} */
        const start = event.start;
        /** @type {?} */
        const distance = event.end.getTime() - event.start.getTime();
        /** @type {?} */
        const currentDay = start.getDay();
        /** @type {?} */
        const firstDate = new Date(ynow, mnow, 1);
        /** @type {?} */
        const firstDay = firstDate.getDay();
        /** @type {?} */
        const secondDate = new Date(ynow, mnow + 1, 1);
        /** @type {?} */
        const result = [];
        /** @type {?} */
        let newDate = new Date(firstDate.setDate(firstDate.getDate() + (currentDay - firstDay)));
        newDate.setHours(start.getHours());
        newDate.setMinutes(start.getMinutes());
        newDate.setSeconds(start.getSeconds());
        newDate.setMilliseconds(start.getMilliseconds());
        result.push(new Date(newDate.getTime()));
        while (newDate < secondDate) {
            newDate = new Date(newDate.setDate(newDate.getDate() + 7));
            result.push(new Date(newDate.getTime()));
        }
        return result.map(x => {
            /** @type {?} */
            const ce = Object.assign({}, event);
            ce.start = new Date(x.getTime());
            ce.end = new Date(x.setTime(x.getTime() + distance));
            return ce;
        });
    };
}
//# sourceMappingURL=data:application/json;base64,